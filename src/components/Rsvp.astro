---
import { Image } from "astro:assets";
import ornament1 from "@assets/dekorasi/ornamen-1.png";
import ornament5 from "@assets/dekorasi/ornamen-7.webp";
import ornamentBg from "@assets/dekorasi/bg-main-3.jpg";
import DualHeading from "@components/DualHeading.astro";

const { namaTamu } = Astro.props;
---

<section class="relative h-full w-full overflow-hidden py-12">
  <div class="absolute inset-0 w-full h-full">
    <Image
      loading={"eager"}
      src={ornamentBg}
      alt="ornament top"
      class="h-full w-full object-cover object-center"
    />
  </div>

  <!-- <div class="absolute -top-16 -left-6 lg:w-1/3 md:w-1/2 w-11/12">
    <Image src={ornamentBg} alt="ornament top" class="-rotate-20" />
  </div>
  <div class="absolute -top-4 -right-2 lg:w-1/6 md:w-1/4 w-1/3">
    <Image src={ornament1} alt="ornament top" class="rotate-180" />
  </div>
  <div
    class="absolute lg:-bottom-32 -bottom-16 -right-4 lg:w-1/2 md:w-1/2 w-11/12"
  >
    <Image src={ornamentBg} alt="ornament bottom" class="rotate-160" />
  </div>
  <div class="absolute bottom-4 lg:bottom-16 -left-6 lg:w-1/6 md:w-1/4 w-1/3">
    <Image src={ornament5} alt="ornament b0ttom" class="rotate-45" />
  </div> -->

  <div
    class="relative max-w-6xl mx-auto h-full flex flex-col items-center justify-center pb-16"
  >
    <div class="mx-auto md:w-1/6 w-1/3">
      <Image src={ornament5} alt="ornamen blue flower" />
    </div>
    <DualHeading word1="Konfirmasi" word2="Kehadiran" wordBg="RSVP" />
    <div class="px-4 text-center lg:w-auto sm:w-1/2 mb-4 space-y-4 mt-4">
      <div>
        <p class="font-medium max-w-md">
          Kami sangat mengharapkan kehadiran Bapak/Ibu/Saudara/i untuk
          menghadiri acara pernikahan kami. Mohon untuk mengisi form RSVP di
          bawah ini.
        </p>
        <p class="max-w-md">Terima Kasih</p>
      </div>
    </div>

    <div
      id="responseRsvp"
      class="invisible text-center p-2 rounded-md w-full max-w-sm"
    >
    </div>

    <form id="rsvpForm" class="max-w-sm w-[90%] p-6 rounded-lg">
      <div class="flex flex-col space-y-1 items-center">
        <label for="name" class="font-semibold">Nama</label>
        <input
          type="text"
          name="name"
          id="name"
          value={namaTamu || ""}
          required
          placeholder="Nama"
          class="mt-1 block w-full py-2 px-3 text-sm border bg-gray-100 border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
        />
      </div>

      <p class="my-4 text-base text-center font-medium">Konfirmasi kehadiran</p>

      <div class="flex flex-wrap justify-evenly gap-x-6 px-4">
        <div class="flex items-center gap-x-3">
          <input
            id="yahadir"
            name="kehadiran"
            type="radio"
            value="hadir"
            required
            class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300"
          />
          <label for="yahadir" class="block font-medium text-gray-900">
            Ya, saya akan hadir
          </label>
        </div>

        <div class="flex items-center gap-x-3">
          <input
            id="tidakhadir"
            name="kehadiran"
            type="radio"
            value="tidak hadir"
            class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300"
          />
          <label for="tidakhadir" class="block font-medium text-gray-900">
            Maaf, saya tidak bisa hadir
          </label>
        </div>
      </div>

      <div class="w-full flex justify-center mt-6">
        <button
          type="submit"
          id="submitBtn"
          class="py-2 px-4 bg-coklat-petro text-white font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 hover:cursor-pointer flex items-center gap-x-2"
        >
          <span>Kirim</span>
          <span id="loadingSpinner" class="hidden">
            <svg
              class="animate-spin h-5 w-5 text-white"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
            >
              <circle
                class="opacity-25"
                cx="12"
                cy="12"
                r="10"
                stroke="currentColor"
                stroke-width="4"></circle>
              <path
                class="opacity-75"
                fill="currentColor"
                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
              ></path>
            </svg>
          </span>
        </button>
      </div>
    </form>
  </div>
  <slot />
</section>

<script>
  // Client-side form handling
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("rsvpForm") as HTMLFormElement;
    const responseRsvp = document.getElementById("responseRsvp");
    const submitBtn = document.getElementById("submitBtn") as HTMLButtonElement;
    const loadingSpinner = document.getElementById(
      "loadingSpinner"
    ) as HTMLElement;

    if (form && responseRsvp) {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        loadingSpinner.classList.remove("hidden");
        submitBtn.setAttribute("disabled", "true");

        const formData = new FormData(form);
        const nama = formData.get("name") as string;
        const kehadiran = formData.get("kehadiran") as string;

        if (!nama || !kehadiran) {
          showMessage("Silakan isi semua form", "error");

          return;
        }

        try {
          const response = await fetch("/api/rsvp", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ nama, kehadiran }),
          });

          const result = await response.json();

          if (result.success) {
            hideLoadingSpinner();
            showMessage(
              "Terima kasih atas konfirmasi kehadiran Anda!",
              "success"
            );
            form.reset();
          } else {
            hideLoadingSpinner();
            console.error("Error submitting form:", result.error);
            showMessage("Gagal mengirim RSVP, silakan coba lagi", "error");
          }
        } catch (error) {
          console.error("Error submitting form:", error);
          showMessage("Terjadi kesalahan, silakan coba lagi", "error");
        }
      });
    }

    function hideLoadingSpinner() {
      if (loadingSpinner && submitBtn) {
        loadingSpinner.classList.add("hidden");
        submitBtn.removeAttribute("disabled");
      }
    }

    function showMessage(message: string, type: "success" | "error") {
      if (responseRsvp) {
        responseRsvp.textContent = message;
        responseRsvp.classList.remove(
          "invisible",
          "bg-green-100",
          "text-green-800",
          "bg-red-100",
          "text-red-800"
        );
        responseRsvp.classList.add(
          ...(type === "success"
            ? ["bg-green-100", "text-green-800"]
            : ["bg-red-100", "text-red-800"])
        );

        // Show the message
        responseRsvp.classList.remove("invisible");

        // Scroll to message
        // responseRsvp.scrollIntoView({ behavior: "smooth" });

        // Hide after 3 seconds
        setTimeout(() => {
          responseRsvp.classList.add("invisible", "hidden");
        }, 3000);
      }
    }
  });
</script>
