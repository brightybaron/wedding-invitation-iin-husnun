---
import { Image } from "astro:assets";
import ornament1 from "@assets/dekorasi/ornamen-1.png";
import ornament5 from "@assets/dekorasi/ornamen-5.png";
import ornamentBg from "@assets/dekorasi/bg-main-2.webp";
import DualHeading from "@components/DualHeading.astro";

const namaTamu = Astro.url.searchParams.get("nama");

// This is for server-side form handling if using Astro's API endpoints
// Otherwise, the client-side script below will handle the form submission
---

<section class="relative h-full w-full overflow-hidden py-32">
  <div class="absolute -top-16 -left-6 lg:w-1/3 md:w-1/2 w-11/12">
    <Image src={ornamentBg} alt="ornament top" class="-rotate-20" />
  </div>
  <div class="absolute -top-4 -right-2 lg:w-1/6 md:w-1/4 w-1/3">
    <Image src={ornament1} alt="ornament top" class="rotate-180" />
  </div>
  <div
    class="absolute lg:-bottom-32 -bottom-16 -right-4 lg:w-1/2 md:w-1/2 w-11/12"
  >
    <Image src={ornamentBg} alt="ornament bottom" class="rotate-160" />
  </div>
  <div class="absolute bottom-4 lg:bottom-16 -left-6 lg:w-1/6 md:w-1/4 w-1/3">
    <Image src={ornament5} alt="ornament b0ttom" class="rotate-45" />
  </div>

  <div
    class="max-w-6xl mx-auto h-full flex flex-col items-center justify-center"
  >
    <div class="mx-auto lg:w-1/8 md:w-1/6 w-1/4">
      <Image src={ornament5} alt="ornamen blue flower" />
    </div>
    <DualHeading word1="Konfirmasi" word2="Kehadiran" wordBg="RSVP" />
    <div class="px-4 text-center lg:w-auto sm:w-1/2 mb-4 space-y-4 mt-4">
      <div>
        <p class="text-base max-w-md">
          Kami sangat mengharapkan kehadiran Bapak/Ibu/Saudara/i untuk
          menghadiri acara pernikahan kami. Mohon untuk mengisi form RSVP di
          bawah ini.
        </p>
        <p class="text-base max-w-md">Terima Kasih</p>
      </div>
    </div>

    <div
      id="responseRsvp"
      class="invisible text-center p-2 rounded-md w-full max-w-sm"
    >
    </div>

    <form id="rsvpForm" class="max-w-sm w-[90%] p-6 rounded-lg">
      <div class="flex flex-col space-y-1 items-center">
        <label for="name" class="font-semibold">Nama</label>
        <input
          type="text"
          name="name"
          id="name"
          value={namaTamu || ""}
          required
          placeholder="Nama"
          class="mt-1 block w-full py-2 px-3 text-sm border bg-gray-100 border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
        />
      </div>

      <p class="my-4 text-base text-center font-medium">
        Apakah anda akan hadir?
      </p>

      <div class="flex flex-wrap justify-evenly gap-x-6 px-4">
        <div class="flex items-center gap-x-3">
          <input
            id="yahadir"
            name="kehadiran"
            type="radio"
            value="hadir"
            required
            class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300"
          />
          <label for="yahadir" class="block font-medium text-gray-900">
            Ya, akan hadir
          </label>
        </div>

        <div class="flex items-center gap-x-3">
          <input
            id="tidakhadir"
            name="kehadiran"
            type="radio"
            value="tidak hadir"
            class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300"
          />
          <label for="tidakhadir" class="block font-medium text-gray-900">
            Maaf, tidak bisa hadir
          </label>
        </div>
      </div>

      <div class="w-full flex justify-center mt-6 pb-12">
        <button
          type="submit"
          class="py-2 px-4 bg-blueish-gray text-white font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 hover:cursor-pointer"
        >
          Kirim
        </button>
      </div>
    </form>
  </div>
  <slot />
</section>

<script>
  // Client-side form handling
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("rsvpForm") as HTMLFormElement;
    const responseRsvp = document.getElementById("responseRsvp");

    if (form && responseRsvp) {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        const formData = new FormData(form);
        const nama = formData.get("name") as string;
        const kehadiran = formData.get("kehadiran") as string;

        if (!nama || !kehadiran) {
          showMessage("Silakan isi semua form", "error");
          return;
        }

        try {
          const response = await fetch("/api/rsvp", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ nama, kehadiran }),
          });

          const result = await response.json();

          if (result.success) {
            showMessage(
              "Terima kasih atas konfirmasi kehadiran Anda!",
              "success"
            );
            form.reset();
          } else {
            showMessage(result.error || "Gagal mengirim RSVP", "error");
          }
        } catch (error) {
          console.error("Error submitting form:", error);
          showMessage("Terjadi kesalahan, silakan coba lagi", "error");
        }
      });
    }

    function showMessage(message: string, type: "success" | "error") {
      if (responseRsvp) {
        responseRsvp.textContent = message;
        responseRsvp.classList.remove(
          "invisible",
          "bg-green-100",
          "text-green-800",
          "bg-red-100",
          "text-red-800"
        );
        responseRsvp.classList.add(
          ...(type === "success"
            ? ["bg-green-100", "text-green-800"]
            : ["bg-red-100", "text-red-800"])
        );

        // Show the message
        responseRsvp.classList.remove("invisible");

        // Scroll to message
        // responseRsvp.scrollIntoView({ behavior: "smooth" });

        // Hide after 3 seconds
        setTimeout(() => {
          responseRsvp.classList.add("invisible", "hidden");
        }, 3000);
      }
    }
  });
</script>
